# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tflite

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
np = import_numpy()

class DepthwiseConv2DOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DepthwiseConv2DOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDepthwiseConv2DOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def DepthwiseConv2DOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x54\x46\x4C\x33", size_prefixed=size_prefixed)

    # DepthwiseConv2DOptions
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DepthwiseConv2DOptions
    def Padding(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # DepthwiseConv2DOptions
    def StrideW(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DepthwiseConv2DOptions
    def StrideH(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DepthwiseConv2DOptions
    def DepthMultiplier(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DepthwiseConv2DOptions
    def FusedActivationFunction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # DepthwiseConv2DOptions
    def DilationWFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 1

    # DepthwiseConv2DOptions
    def DilationHFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 1

def DepthwiseConv2DOptionsStart(builder: flatbuffers.Builder):
    builder.StartObject(7)

def Start(builder: flatbuffers.Builder):
    DepthwiseConv2DOptionsStart(builder)

def DepthwiseConv2DOptionsAddPadding(builder: flatbuffers.Builder, padding: int):
    builder.PrependInt8Slot(0, padding, 0)

def AddPadding(builder: flatbuffers.Builder, padding: int):
    DepthwiseConv2DOptionsAddPadding(builder, padding)

def DepthwiseConv2DOptionsAddStrideW(builder: flatbuffers.Builder, strideW: int):
    builder.PrependInt32Slot(1, strideW, 0)

def AddStrideW(builder: flatbuffers.Builder, strideW: int):
    DepthwiseConv2DOptionsAddStrideW(builder, strideW)

def DepthwiseConv2DOptionsAddStrideH(builder: flatbuffers.Builder, strideH: int):
    builder.PrependInt32Slot(2, strideH, 0)

def AddStrideH(builder: flatbuffers.Builder, strideH: int):
    DepthwiseConv2DOptionsAddStrideH(builder, strideH)

def DepthwiseConv2DOptionsAddDepthMultiplier(builder: flatbuffers.Builder, depthMultiplier: int):
    builder.PrependInt32Slot(3, depthMultiplier, 0)

def AddDepthMultiplier(builder: flatbuffers.Builder, depthMultiplier: int):
    DepthwiseConv2DOptionsAddDepthMultiplier(builder, depthMultiplier)

def DepthwiseConv2DOptionsAddFusedActivationFunction(builder: flatbuffers.Builder, fusedActivationFunction: int):
    builder.PrependInt8Slot(4, fusedActivationFunction, 0)

def AddFusedActivationFunction(builder: flatbuffers.Builder, fusedActivationFunction: int):
    DepthwiseConv2DOptionsAddFusedActivationFunction(builder, fusedActivationFunction)

def DepthwiseConv2DOptionsAddDilationWFactor(builder: flatbuffers.Builder, dilationWFactor: int):
    builder.PrependInt32Slot(5, dilationWFactor, 1)

def AddDilationWFactor(builder: flatbuffers.Builder, dilationWFactor: int):
    DepthwiseConv2DOptionsAddDilationWFactor(builder, dilationWFactor)

def DepthwiseConv2DOptionsAddDilationHFactor(builder: flatbuffers.Builder, dilationHFactor: int):
    builder.PrependInt32Slot(6, dilationHFactor, 1)

def AddDilationHFactor(builder: flatbuffers.Builder, dilationHFactor: int):
    DepthwiseConv2DOptionsAddDilationHFactor(builder, dilationHFactor)

def DepthwiseConv2DOptionsEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return DepthwiseConv2DOptionsEnd(builder)
